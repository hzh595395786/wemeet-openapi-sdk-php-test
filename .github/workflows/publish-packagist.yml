name: Manual Publish SDK to Packagist

on:
  workflow_dispatch:  # 仅手动触发

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # 步骤1：使用PAT检出代码（解决403错误）
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}  # 必须使用repo权限的GitHub Token
          ref: main

      # 步骤2：验证composer.json
      - name: Validate composer.json
        run: |
          cd wemeetopenapi
          echo "当前版本: $(jq -r '.version' composer.json)"
          composer validate --no-check-all || exit 1

      # 步骤3：创建纯净发布分支
      - name: Prepare packagist-release branch
        run: |
          # 配置Git身份（必须与GitHub账户匹配）
          git config --global user.name "hzh595395786"
          git config --global user.email "595395786@qq.com"  # 修正为您的真实邮箱

          # 创建只包含子目录内容的分支
          git checkout --orphan temp-packagist
          git rm -rf .
          git checkout main -- wemeetopenapi/
          mv wemeetopenapi/* .
          rm -rf wemeetopenapi

          # 提交到新分支
          git add .
          git commit -m "Release $(jq -r '.version' composer.json)"
          git branch -M packagist-release
          git push -f origin packagist-release
      # 步骤4：打 Tag
      - name: Create Tag
        run: |
          VERSION=$(jq -r '.version' wemeetopenapi/composer.json)
          git tag "v${VERSION}"
          git push origin "v${VERSION}"
      # 步骤5：通知Packagist（使用正确的Token）
      - name: Update Packagist
        run: |
          # 获取composer.json中的包名
          PACKAGE_NAME=$(jq -r '.name' composer.json)
          
          # 将包名中的/替换为-用于URL
          PACKAGE_URL_NAME=${PACKAGE_NAME/\//-}
          
          # 检查包是否存在
          if curl -s "https://packagist.org/packages/$PACKAGE_NAME.json" | grep -q "Package not found"; then
            echo "Creating new package..."
            curl -X POST \
              -H "Content-Type: application/json" \
              "https://packagist.org/api/create-package?username=hzh595395786&apiToken=${{ secrets.PACKAGIST_TOKEN }}" \
              -d '{"repository":{"url":"https://github.com/${{ github.repository }}","branch":"packagist-release"}}'
          else
            echo "Updating existing package..."
            curl -X POST \
              -H "Content-Type: application/json" \
              "https://packagist.org/api/update-package?force=1&username=hzh595395786&apiToken=${{ secrets.PACKAGIST_TOKEN }}"
              -d '{"repository":{"url":"https://github.com/${{ github.repository }}"}}'
          fi